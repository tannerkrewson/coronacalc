{"version":3,"sources":["components/QuestionSpouseIncome.js","components/QuestionMarried.js","components/QuestionDep.js","components/QuestionIncome.js","components/Results.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["QuestionSpouseIncome","props","render","name","min","max","formatter","value","replace","parser","state","spouseIncome","onChange","handleInputChange","bind","onClick","onClickNext","newState","this","setState","onNext","React","Component","QuestionMarried","married","isMarried","additionalQuestions","push","QuestionDep","showInputNumber","shape","dependants","QuestionIncome","income","Results","finalAmount","formData","phaseoutStart","isSingle","isHeadOfHousehold","additionalIncome","getAdditionalIncome","Math","floor","getPhaseout","console","log","Calculator","Question","questions","step","done","newFormData","addQuestions","length","App","className","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.501b74a6.chunk.js","sourcesContent":["import React from \"react\";\nimport { InputNumber, Button } from \"antd\";\n\nclass QuestionSpouseIncome extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tspouseIncome: 0,\n\t\t};\n\t}\n\n\thandleInputChange(value) {\n\t\tconst newState = {\n\t\t\tspouseIncome: value,\n\t\t};\n\t\tthis.setState(newState);\n\t\tthis.props.onChange(newState);\n\t}\n\tonClickNext() {\n\t\t//wrapper to prevent click event info from being sent and interfering with newQuestionst\n\t\tthis.props.onNext();\n\t}\n\n\trender = () => (\n\t\t<div>\n\t\t\t<div>How much did your spouse make in 2019?</div>\n\t\t\t<div>\n\t\t\t\t<InputNumber\n\t\t\t\t\tname=\"income\"\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={9999999999}\n\t\t\t\t\tformatter={(value) =>\n\t\t\t\t\t\t`$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n\t\t\t\t\t}\n\t\t\t\t\tparser={(value) => value.replace(/\\$\\s?|(,*)/g, \"\")}\n\t\t\t\t\tvalue={this.state.spouseIncome}\n\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Button onClick={this.onClickNext.bind(this)}>Next</Button>\n\t\t</div>\n\t);\n}\n\nexport default QuestionSpouseIncome;\n","import React from \"react\";\nimport { Button } from \"antd\";\n\nimport QuestionSpouseIncome from \"./QuestionSpouseIncome\";\n\nclass QuestionMarried extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmarried: false,\n\t\t};\n\t}\n\n\thandleInputChange(value) {\n\t\tconst isMarried = value === \"yes\";\n\t\tconst newState = {\n\t\t\tmarried: isMarried,\n\t\t};\n\t\tthis.setState(newState);\n\t\tthis.props.onChange(newState);\n\t\tconst additionalQuestions = [];\n\t\tif (isMarried) {\n\t\t\tadditionalQuestions.push(QuestionSpouseIncome);\n\t\t}\n\t\tthis.props.onNext(additionalQuestions);\n\t}\n\n\trender = () => (\n\t\t<div>\n\t\t\t<div>Are you married?</div>\n\t\t\t<div>\n\t\t\t\t<Button onClick={() => this.handleInputChange(\"yes\")}>Yes</Button>\n\t\t\t\t<Button onClick={() => this.handleInputChange(\"no\")}>No</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default QuestionMarried;\n","import React from \"react\";\nimport { InputNumber, Button } from \"antd\";\n\nclass QuestionDep extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdependants: 0,\n\t\t\tshowInputNumber: false,\n\t\t};\n\t}\n\n\thandleInputChange(value) {\n\t\tconst newState = {\n\t\t\tdependants: value,\n\t\t};\n\t\tthis.setState(newState);\n\t\tthis.props.onChange(newState);\n\t\tthis.props.onNext();\n\t}\n\n\tshowInputNumber() {\n\t\tthis.setState({ showInputNumber: true });\n\t}\n\n\trender = () => (\n\t\t<div>\n\t\t\t<div>How many dependants do you have?</div>\n\t\t\t{!this.state.showInputNumber && (\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={() => this.handleInputChange(0)}>None</Button>\n\t\t\t\t\t<Button shape=\"circle\" onClick={() => this.handleInputChange(1)}>\n\t\t\t\t\t\t1\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button shape=\"circle\" onClick={() => this.handleInputChange(2)}>\n\t\t\t\t\t\t2\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button shape=\"circle\" onClick={() => this.handleInputChange(3)}>\n\t\t\t\t\t\t3\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button shape=\"circle\" onClick={() => this.handleInputChange(4)}>\n\t\t\t\t\t\t4\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={() => this.showInputNumber()}>More</Button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{this.state.showInputNumber && (\n\t\t\t\t<div>\n\t\t\t\t\t<InputNumber\n\t\t\t\t\t\tname=\"dependants\"\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={100}\n\t\t\t\t\t\tvalue={this.state.dependants}\n\t\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default QuestionDep;\n","import React from \"react\";\nimport { InputNumber, Button } from \"antd\";\n\nclass QuestionIncome extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tincome: 0,\n\t\t};\n\t}\n\n\thandleInputChange(value) {\n\t\tconst newState = {\n\t\t\tincome: value || 0,\n\t\t};\n\t\tthis.setState(newState);\n\t\tthis.props.onChange(newState);\n\t}\n\tonClickNext() {\n\t\t//wrapper to prevent click event info from being sent and interfering with newQuestionst\n\t\tthis.props.onNext();\n\t}\n\n\trender = () => (\n\t\t<div>\n\t\t\t<div>How much did you make in 2019?</div>\n\t\t\t<div>\n\t\t\t\t<InputNumber\n\t\t\t\t\tname=\"income\"\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={9999999999}\n\t\t\t\t\tformatter={(value) =>\n\t\t\t\t\t\t`$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n\t\t\t\t\t}\n\t\t\t\t\tparser={(value) => value.replace(/\\$\\s?|(,*)/g, \"\")}\n\t\t\t\t\tvalue={this.state.income}\n\t\t\t\t\tonChange={this.handleInputChange.bind(this)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Button onClick={this.onClickNext.bind(this)}>Next</Button>\n\t\t</div>\n\t);\n}\n\nexport default QuestionIncome;\n","import React from \"react\";\nimport { Button } from \"antd\";\n\nclass Results extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmarried: false,\n\t\t};\n\t\tconsole.log(this.props.formData);\n\t}\n\n\trender = () => {\n\t\tconst baseAmount = this.props.formData.married ? 2400 : 1200;\n\t\tconst childAmount = this.props.formData.dependants * 500;\n\n\t\tconst finalAmount =\n\t\t\tbaseAmount + childAmount - getPhaseout(this.props.formData);\n\n\t\tif (finalAmount <= 0) return <div>You do not qualify :(</div>;\n\t\treturn <div>You will receive ${finalAmount}!</div>;\n\t};\n}\n\nfunction getPhaseout(formData) {\n\tconst isSingle = !formData.married && formData.dependants === 0;\n\tconst isHeadOfHousehold = !formData.married && formData.dependants > 0;\n\n\tlet phaseoutStart;\n\tif (isSingle) {\n\t\tphaseoutStart = 75000;\n\t} else if (isHeadOfHousehold) {\n\t\tphaseoutStart = 112500;\n\t} else {\n\t\tphaseoutStart = 150000;\n\t}\n\n\tconst income = formData.income;\n\tconst spouseIncome = formData.spouseIncome || 0;\n\tconst totalIncome = income + spouseIncome;\n\n\tconst additionalIncome = getAdditionalIncome(totalIncome, phaseoutStart);\n\n\treturn Math.floor(additionalIncome / 100) * 5;\n}\n\nfunction getAdditionalIncome(income, phaseoutStart) {\n\tconst additionalIncome = income - phaseoutStart;\n\tif (additionalIncome < 0) return 0;\n\treturn additionalIncome;\n}\n\nexport default Results;\n","import React from \"react\";\nimport { Card, Button } from \"antd\";\nimport QuestionMarried from \"./QuestionMarried\";\nimport QuestionDep from \"./QuestionDep\";\nimport QuestionIncome from \"./QuestionIncome\";\nimport Results from \"./Results\";\n\nclass Calculator extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tstep: 0,\n\t\t\tformData: { income: 0, spouseIncome: 0, married: false, dependants: 0 },\n\t\t\tdone: false,\n\t\t};\n\t\tthis.questions = [QuestionMarried, QuestionDep, QuestionIncome];\n\t}\n\tonChange(newFormData) {\n\t\tthis.setState({ formData: { ...this.state.formData, ...newFormData } });\n\t}\n\tonNext(addQuestions = []) {\n\t\tconsole.log(addQuestions);\n\n\t\tthis.questions = [...this.questions, ...addQuestions];\n\n\t\tif (this.state.step === this.questions.length - 1) {\n\t\t\tthis.setState({ done: true });\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({ step: this.state.step + 1 });\n\t}\n\tcalculate() {}\n\trender = () => {\n\t\tconst Question = this.questions[this.state.step];\n\t\treturn (\n\t\t\t<Card>\n\t\t\t\t{!this.state.done && (\n\t\t\t\t\t<Question\n\t\t\t\t\t\tonChange={this.onChange.bind(this)}\n\t\t\t\t\t\tonNext={this.onNext.bind(this)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{this.state.done && <Results formData={this.state.formData} />}\n\t\t\t</Card>\n\t\t);\n\t};\n}\n\nexport default Calculator;\n","import React from \"react\";\nimport Calculator from \"./components/Calculator\";\nimport \"./App.css\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h2>Check Calculator</h2>\n\t\t\t\t<p>----</p>\n\t\t\t</header>\n\t\t\t<Calculator />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}